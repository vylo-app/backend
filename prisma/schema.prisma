generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String             @id @default(uuid())
  email       String             @unique
  password    String
  firstName   String?
  lastName    String?

  orders      Order[]
  reviews     ProductReview[]
  favorites   Favorite[]
  credentials AuthCredential[]

  @@map("users")
}

model AuthCredential {
  id     String @id @default(uuid())
  hash   String
  type   String
  userId String
  user   User   @relation(fields: [userId], references: [id])

  @@map("auth_credentials")
}

model Product {
  id          String            @id @default(uuid())
  name        String
  description String

  price       ProductPrice?
  orderItems  OrderItem[]
  reviews     ProductReview[]
  favorites   Favorite[]

  @@map("products")
}

model Favorite {
  id        String  @id @default(uuid())
  userId    String
  productId String

  user      User    @relation(fields: [userId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@unique([userId, productId])
  @@map("favorites")
}

model ProductReview {
  id        String  @id @default(uuid())
  rating    Int
  feedback  String
  userId    String
  productId String

  user      User    @relation(fields: [userId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@map("product_reviews")
}

model Order {
  id         String      @id @default(uuid())
  userId     String
  amount     Int
  totalPrice Float

  user       User        @relation(fields: [userId], references: [id])
  items      OrderItem[]

  @@map("orders")
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String
  productId String

  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}

model ProductPrice {
  id        String  @id @default(uuid())
  productId String  @unique
  price     Float

  product   Product @relation(fields: [productId], references: [id])

  @@map("product_prices")
}